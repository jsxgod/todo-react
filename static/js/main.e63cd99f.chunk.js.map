{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["config","ip","port","App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","startEdit","deleteItem","crossOutItem","this","console","log","fetch","then","response","json","data","setState","e","name","target","value","preventDefault","url","method","headers","body","JSON","stringify","catch","error","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","textDecoration","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e63cd99f.chunk.js","sourcesContent":["export const config = {\r\n    ip: \"192.168.0.20\",\r\n    port: \"8080\",\r\n}\r\n\r\nexport default config;","import React from \"react\";\nimport './App.css';\nimport config from './config'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        todoList:[],\n        activeItem:{\n          id:null,\n          title:'',\n          completed:false,\n        },\n        editing:false,\n      }\n      this.fetchTasks = this.fetchTasks.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.startEdit = this.startEdit.bind(this)\n      this.deleteItem = this.deleteItem.bind(this)\n      this.crossOutItem = this.crossOutItem.bind(this)\n  };\n\n  componentWillMount() {\n    this.fetchTasks()\n  }\n\n  fetchTasks(){\n    console.log('Fetching')\n\n    fetch('https://'+config.ip+':'+config.port+'/api/task-list/')\n        .then(response => response.json())\n        .then(data =>\n            this.setState({\n              todoList: data\n            })\n        )\n  }\n\n  handleChange(e){\n    var name = e.target.name\n    var value = e.target.value\n    console.log('Name:', name)\n    console.log('Value:', value)\n\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title:value\n      }\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault()\n    console.log('ITEM:', this.state.activeItem)\n\n    var url = 'https://'+config.ip+':'+config.port+'/api/task-create/'\n\n    if (this.state.editing === true){\n      url = `https://'${ config.ip }:${ config.port }/api/task-list/${ this.state.activeItem.id }/`\n      this.setState({\n        editing: false,\n      })\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(this.state.activeItem)\n    }).then((response) => {\n      this.fetchTasks()\n      this.setState({\n        activeItem:{\n          id: null,\n          title: '',\n          completed: false,\n        }\n      })\n    }).catch(function(error){\n      console.log(error)\n    })\n  }\n\n  startEdit(task){\n    this.setState({\n      activeItem: task,\n      editing: true,\n    })\n  }\n\n  deleteItem(task){\n    fetch(`https://${config.ip}:${config.port}/api/task-delete/${task.id}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then((response) => {\n      this.fetchTasks()\n    })\n  }\n\n  crossOutItem(task){\n    var url = `https://${ config.ip }:${ config.port }/api/task-update/${task.id}/`\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({'title': task.title, 'completed': !task.completed})\n    }).then((response) => {\n      this.fetchTasks()\n    })\n  }\n\n  render() {\n    var tasks = this.state.todoList;\n    var self = this;\n    return(\n        <div className=\"container\">\n          <div id=\"task-container\">\n            <div onSubmit={this.handleSubmit} id=\"form-wrapper\">\n              <form id=\"form\">\n                <div className=\"flex-wrapper\">\n                  <div style={{flex: 6}}>\n                    <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Task title...\"/>\n                  </div>\n\n                  <div style={{flex: 1}}>\n                    <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add task\" value=\"Add\" />\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div id=\"list-wrapper\">\n              {tasks.map(function(task, index){\n                return(\n                    <div key={index} className=\"task-wrapper flex-wrapper\">\n                      <div onClick={() => self.crossOutItem(task)} style={{flex: 7}}>\n                        {task.completed === false ?\n                            (<span>{task.title}</span>) :\n                            (<span style={{textDecoration: 'line-through'}}>{task.title}</span>)}\n                      </div>\n\n                      <div style={{flex: 1}}>\n                        <button onClick={() => self.startEdit(task)} className=\"btn btn-sm btn-outline-info edit\">Edit</button>\n                      </div>\n\n                      <div style={{flex: 1}}>\n                        <button onClick={() => self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">‚ùå</button>\n                      </div>\n                    </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}